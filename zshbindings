# Last edit on 2014-11-27 
# This file is a part of my zsh configuration. It's sourced from the .zshrc
# file. It contains my key bindings

bindkey -v  #vi keybindings

# History completion on pgup and pgdown
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end

if [[ -f /etc/fedora-release ]] ; then
    if [ "$TERM" = "screen-256color" ]; then
        bindkey "^[[1~" beginning-of-line
        bindkey "^[[4~" end-of-line
    else
        bindkey "^[[H" beginning-of-line
        bindkey "^[[3~" delete-char
        bindkey "^[[F" end-of-line
    fi

    bindkey "^[[5~" history-beginning-search-backward-end
    bindkey "^[[6~" history-beginning-search-forward-end
else 
    # create a zkbd compatible hash;
    # to add other keys to this hash, see: man 5 terminfo
    typeset -A key

    key[Home]=${terminfo[khome]}
    key[End]=${terminfo[kend]}
    key[Insert]=${terminfo[kich1]}
    key[Delete]=${terminfo[kdch1]}
    key[Up]=${terminfo[kcuu1]}
    key[Down]=${terminfo[kcud1]}
    key[Left]=${terminfo[kcub1]}
    key[Right]=${terminfo[kcuf1]}
    key[PageUp]=${terminfo[kpp]}
    key[PageDown]=${terminfo[knp]}
    key[Enter]=${terminfo[kent]}

    function setup-key(){
        [[ -n "$1" ]] && bindkey "$1" $2
    }

# setup key accordingly
    setup-key $key[Home]    beginning-of-line
    setup-key $key[End]     end-of-line
    setup-key $key[Insert]  overwrite-mode
    setup-key $key[PageUp]  history-beginning-search-backward-end
    setup-key $key[PageDown]  history-beginning-search-forward-end
    setup-key $key[Delete]  delete-char
    setup-key $key[Enter]  accept-line
    setup-key $key[Up]      up-line-or-history
    setup-key $key[Down]    down-line-or-history
    setup-key $key[Left]    backward-char
    setup-key $key[Right]   forward-char
fi

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
function zle-line-init () {
    echoti smkx
}
function zle-line-finish () {
    echoti rmkx
}
zle -N zle-line-init
zle -N zle-line-finish  

bindkey "^[[2;5~" insert-last-word  # STRG+Einfg
bindkey "^W" backward-delete-word    # "Entf" or "Del"
bindkey -s "\C-t" "dirs -v\r" 

run-with-sudo () { LBUFFER="sudo $LBUFFER" }
zle -N run-with-sudo
bindkey '^N' run-with-sudo

# press esc-e for editing command line in $EDITOR or $VISUAL
if  zle -N edit-command-line ; then
    bindkey '\ee' edit-command-line
fi

# press "ctrl-e d" to insert the actual date in the form yyyy-mm-dd
_bkdate() { BUFFER="$BUFFER$(today)"; CURSOR=$#BUFFER; }
zle -N _bkdate
bindkey '^Ed' _bkdate

#Shortcut for \kbd{fg<enter>}
bindkey -s '^z' " &\n"

bindkey '^[[Z' reverse-menu-complete

# Auto quote pasted urls
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic
autoload -Uz bracketed-paste-magic
zle -N bracketed-paste bracketed-paste-magic
#autoload -Uz predict-on && predict-on

autoload -Uz insert-composed-char
bindkey "^K" run-help
bindkey -M vicmd "K" run-help

bindkey "^P" zaw
bindkey "^R" zaw-history
bindkey "^A" zaw-cdr

bindkey ' ' magic-space  # also do history expansion on space

# Enable autosuggestions automatically
zle-line-init() {
    # weird workaround, so zsh_autosuggest doesn't break Home and Endkey
}

zle -N zle-line-init

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=13'
bindkey '^f' vi-forward-blank-word
bindkey '^g' end-of-line
